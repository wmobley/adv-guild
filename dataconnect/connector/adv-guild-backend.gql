mutation CreateQuest($name: String!, $synopsis: String!, $difficultyId: UUID!, $interestId: UUID!, $questTypeId: UUID!, $startLocationId: UUID!) @auth(level: USER) {
  quest_insert(data: {name: $name, synopsis: $synopsis, difficultyId: $difficultyId, interestId: $interestId, questTypeId: $questTypeId, startLocationId: $startLocationId, isPublic: true, createdAt_expr: "request.time", updatedAt_expr: "request.time"})
}

query GetPublicQuests @auth(level: PUBLIC) {
  quests(where: {isPublic: {eq: true}}) {
    id
    name
    synopsis
    difficulty {
      name
    }
    interest {
      name
    }
    questType {
      name
    }
    startLocation {
      name
    }
  }
}

query GetQuest($id: UUID!) @auth(level: PUBLIC) {
  quest(id: $id) {
    id
    name
    synopsis
    difficulty {
      name
    }
    interest {
      name
    }
    questType {
      name
    }
    startLocation {
      name
    }
    itinerary
    reward
  }
}

mutation UpdateQuest($id: UUID!, $name: String, $synopsis: String, $difficultyId: UUID, $interestId: UUID, $questTypeId: UUID, $startLocationId: UUID, $itinerary: String, $reward: String) @auth(level: USER) {
  quest_update(id: $id, data: {name: $name, synopsis: $synopsis, difficultyId: $difficultyId, interestId: $interestId, questTypeId: $questTypeId, startLocationId: $startLocationId, itinerary: $itinerary, reward: $reward, updatedAt_expr: "request.time"})
}

mutation DeleteQuest($id: UUID!) @auth(level: USER) {
  quest_delete(id: $id)
}

query ListCampaigns @auth(level: PUBLIC) {
  campaigns {
    id
    title
    description
    createdAt
  }
}

mutation CreateCampaign($title: String!, $description: String!) @auth(level: USER) {
  campaign_insert(data: {title: $title, description: $description, creatorId_expr: "auth.uid", createdAt_expr: "request.time"})
}

query LocationDetails @auth(level: PUBLIC) {
  locations {
    id
    name
    description
    latitude
    longitude
    realWorldInspiration
    quests_on_destination {
      id
      name
    }
    quests_on_startLocation {
      id
      name
    }
  }
}

query GetAllLocations @auth(level: PUBLIC) {
  locations {
    id
    name
    latitude
    longitude
    description
    realWorldInspiration
  }
}

mutation AddNewComment @auth(level: USER) {
  quest_insert(data: {})
}

query QuestReviews @auth(level: PUBLIC) {
  quests {
    id
    name
    synopsis
  }
  locations {
    id
    name
    description
  }
}